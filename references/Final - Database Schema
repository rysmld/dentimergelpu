-- users/login table
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_number VARCHAR(20) UNIQUE NOT NULL, -- Used for login
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('Admin', 'Clinician', 'Clinical Instructor') NOT NULL,
    contact_number VARCHAR(20),
    profile_picture VARCHAR(255), -- Store image URL or file path
    status ENUM('active', 'inactive') DEFAULT 'active', -- Added status column
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- DEFAULT USERS
INSERT INTO users (id, student_number, last_name, first_name, role, password, status, created_at)
VALUES 
    (1, 'A-000001', 'Admin', 'User', 'admin', SHA2('admin123', 256), 'active', NOW()),  
    (2, 'CI-000001', 'Instructor', 'User', 'clinical_instructor', SHA2('ci123', 256), 'active', NOW()),  
    (3, 'C-000001', 'Clinician', 'User', 'clinician', SHA2('clinician123', 256), 'active', NOW());


CREATE TABLE patients (
    patient_number VARCHAR(10) PRIMARY KEY, 
    last_name VARCHAR(50) NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    middle_initial VARCHAR(2),
    nickname VARCHAR(50),
    age INT NOT NULL,  
    sex_gender ENUM('Male', 'Female', 'Other', 'Prefer not to say') NOT NULL,
    date_of_birth DATE NOT NULL,
    civil_status ENUM('Single', 'Married', 'Divorced', 'Widowed', 'Separated') DEFAULT 'Single',
    nationality VARCHAR(50),
    ethnicity VARCHAR(50),
    home_address VARCHAR(255) NOT NULL,
    home_phone VARCHAR(15),
    mobile_no VARCHAR(15) NOT NULL,
    email VARCHAR(100),
    occupation VARCHAR(100),
    work_address VARCHAR(255),
    work_phone VARCHAR(15),
    parent_guardian VARCHAR(100),
    parent_contact_number VARCHAR(15),
    emergency_contact VARCHAR(100) NOT NULL,
    emergency_contact_number VARCHAR(15) NOT NULL,
    profile_photo VARCHAR(255),  
    thumbmark VARCHAR(255),  
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);



CREATE TABLE cases (
    case_number VARCHAR(10) PRIMARY KEY,  -- Custom formatted Case ID
    date_today DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,  -- ✅ Fixed Default Value
    patient_number VARCHAR(20) NOT NULL,  -- Reference to patients(patient_number)
    clinician_id INT NOT NULL,
    clinical_instructor_id INT,
    clinic VARCHAR(255),  -- Clinic selection

    -- Chief Complaint & History
    chief_complaint TEXT NOT NULL,
    history_of_present_illness TEXT NOT NULL,
    dental_history TEXT NOT NULL, 
    family_history TEXT NOT NULL,
    personal_social_history TEXT NOT NULL,

    -- JSON Fields for Complex Data
    medical_history JSON,
    review_of_systems JSON,
    health_assessment JSON,
    health_questionnaire JSON,

    -- Extraoral & Intraoral Examination
    general_appraisal JSON,
    extraoral_examination JSON,
    intraoral_examination JSON,
    periodontal_examination JSON,
    occlusion JSON,

    -- Additional Data
    appliances TEXT,
    toothchart VARCHAR(255),  -- ✅ Store the file path instead of binary data
    diagnostic_test TEXT,
    diagnostic_test_notes TEXT,

    -- Assessment Plan
    assessment_plan JSON,

    -- Consent Data
    consent JSON,
    
    -- Signatures (Stored as Base64 or Image URL)
    patient_signature TEXT, 
    clinician_signature TEXT, 
    clinical_instructor_signature TEXT,

    -- Case Submission Date
    submission_date DATE NOT NULL,

    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    -- Status Column
    status ENUM('for approval', 'on progress', 'completed') NOT NULL DEFAULT 'for approval',

    -- ✅ Foreign Key Constraints  
    CONSTRAINT fk_cases_patient FOREIGN KEY (patient_number)  
        REFERENCES patients(patient_number) ON DELETE CASCADE,  

    CONSTRAINT fk_cases_clinician FOREIGN KEY (clinician_id)  
        REFERENCES users(id) ON DELETE CASCADE,  

    CONSTRAINT fk_cases_instructor FOREIGN KEY (clinical_instructor_id)  
        REFERENCES users(id) ON DELETE SET NULL  
);


